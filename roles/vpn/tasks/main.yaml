---
# tasks file for vpn

#- debug: var="{{ item }}"
#  with_items:
#  - ansible_os_family
#  - ansible_distribution
#  - ansible_distribution_major_version
#  - ansible_distribution_release
#  - ansible_distribution_version

# Fedora requires dnf module with exclude feature
# Fedora 32 won't resolve ansible_distribution variables w/ ansible 2.7
#    use pip install 'ansible==2.8.12' --update
- name: Verify Ansible meets common-role's version requirements.
  assert:
    that: "ansible_version.full is version_compare('2.8.12', '>=')"
    fail_msg: "You must update Ansible to at least ansible 2.8.12 to use this role."
    success_msg: "ansible V{{ ansible_version.full }} is OK"
#- debug: var=ansible_version.full

- name: check for /dev/net/tun
  file:
    path: /dev/net/tun
    state: file
  register: tun_exists
- assert:
    that: not tun_exists.failed
    fail_msg: "The system does not have the TUN device available."
    success_msg: "/dev/net/tun exists"


- name: Check if inside AWS
  uri:
    url: http://169.254.169.254/latest/meta-data
    timeout: 2
  register: aws_uri_check
  failed_when: False
- set_fact:
    is_aws_environment: "{{ aws_uri_check.status == 200 }}"
- debug: var=is_aws_environment

- name: setting hostname with hostnamectl
  command: hostnamectl set-hostname "{{ inventory_hostname }}"
  args:
    warn: no
  register: hostname
  when: is_aws_environment


- name: get external IP
  uri:
    url: https://api.ipify.org/
    validate_certs: yes
    return_content: yes
    timeout: 2
  register: pub_ip
  failed_when: False
#- debug: var=pub_ip
- set_fact:
   public_ip: "{{ pub_ip.content }}"
- debug: var=public_ip

- debug: var=ansible_facts.all_ipv4_addresses
#  with_items:
#    - ansible_facts.eth1.ipv4.address
#    - ansible_facts.eth1.ipv4.address


- name: override specific variables for distributions
  # allow OS-specific file to override defaults/main.yaml
  include_vars: "{{ item }}"
  with_first_found:
  - files:
    - "{{ ansible_os_family }}.yaml"
    - defaults.yaml
- debug: var=group_vars

- include_tasks: "{{ ansible_os_family }}_tasks.yaml"

- name: Install vpn packages (this may take a while)
  package: 
    name: "{{ vpn_packages }}"
    state: present

- include_tasks: "{{ ansible_os_family }}_services.yaml"

- name: create /etc/openvpn/server/easy-rsa
  file:
    path: /etc/openvpn/server/easy-rsa
    mode: '0755'
    owner: root
    group: root
    state: directory
  register: easy_rsa_dir
#- debug: var=easy_rsa_dir

- name: get easyrsa
  unarchive:
    src: "{{ easy_rsa_src }}"
    dest: "{{ easy_rsa_dest }}"
#    creates: "{{ easy_rsa_dest }}"
    owner: root
    group: root
    remote_src: yes
    extra_opts: 
      - "--strip-components"
      - 1
  register: easyrsa_tar
#- debug: var=easyrsa_tar

# Create the PKI, set up the CA and the server and client certificates
- name: easyrsa init-pki
  command: ./easyrsa init-pki
  args:
    chdir: /etc/openvpn/server/easy-rsa/
    creates: /etc/openvpn/server/easy-rsa/pki
    warn: no
  register: easyrsa_init_pki
- debug: var=easyrsa_init_pki.stdout_lines

- name: easyrsa build-ca
  command: ./easyrsa --batch build-ca nopass
  args:
    chdir: /etc/openvpn/server/easy-rsa/
    creates: /etc/openvpn/server/easy-rsa/pki/private/ca.key
    warn: no
  register: easyrsa_ca
- debug: var=easyrsa_ca.stdout_lines
  when: not easyrsa_ca.changed
- debug: var=easyrsa_ca.stderr_lines
  when: easyrsa_ca.changed

- name: easyrsa build-server
  shell: EASYRSA_CERT_EXPIRE="{{ easy_rsa_cert_expire }}" ./easyrsa build-server-full server nopass
  args:
    chdir: /etc/openvpn/server/easy-rsa/
    creates: /etc/openvpn/server/easy-rsa/pki/private/server.key
    warn: no
  register: easyrsa_server
- debug: var=easyrsa_server.stdout_lines
  when: not easyrsa_server.changed
- debug: var=easyrsa_server.stderr_lines
  when: easyrsa_server.changed

- name: easyrsa build-client
  shell: EASYRSA_CERT_EXPIRE="{{ easy_rsa_cert_expire }}" ./easyrsa build-client-full client nopass
  args:
    chdir: /etc/openvpn/server/easy-rsa/
    creates: /etc/openvpn/server/easy-rsa/pki/private/client.key
    warn: no
  register: easyrsa_client
- debug: var=easyrsa_client.stdout_lines
  when: not easyrsa_client.changed
- debug: var=easyrsa_client.stderr_lines
  when: easyrsa_client.changed

- name: easyrsa gen-clr
  shell: EASYRSA_CLR_DAYS="{{ easy_rsa_cert_expire }}" ./easyrsa gen-crl
  args:
    chdir: /etc/openvpn/server/easy-rsa/
    creates: /etc/openvpn/server/easy-rsa/pki/crl.pem
    warn: no
  register: easyrsa_clr
- debug: var=easyrsa_clr.stdout_lines

- name: copy files to server directory
  copy:
    src: "/etc/openvpn/server/easy-rsa/{{ item }}"
    dest: /etc/openvpn/server/
    remote_src: yes
  with_items:
    - pki/ca.crt
    - pki/private/ca.key
    - pki/issued/server.crt
    - pki/private/server.key
    - pki/crl.pem

# nobody_group_id defined in vars/{ansible_os_family}.yaml
- name: set crl.pem permissions
  file:
    path: /etc/openvpn/server/crl.pem
    state: file
    owner: nobody
    group: "{{ nobody_group_id }}"
  register: crl_permissions
#- debug: var=crl_permissions

# ensure OpenVPN can read the clr file
- name: set /etc/openvpn/server permissions
  file:
    path: /etc/openvpn/server/
    state: directory
    mode: "0755"

- name: openvpn genkey (ignore deprecated warning on some system)
  command: openvpn --genkey --secret /etc/openvpn/server/tc.key
  args:
    chdir: /etc/openvpn/server/easy-rsa/
    creates: /etc/openvpn/server/tc.key
    warn: no
  register: openvpn_genkey
#- debug: var=openvpn_genkey

- name: copy dh.pem
  copy:
    src: dh.pem
    dest: /etc/openvpn/server/dh.pem
    owner: root
    group: root
    mode: "0600"
  register: copy_dh
#- debug: var=copy_dh

#- name: build server.conf
#  template:
#    src: server.conf.j2
#    dest: /etc/openvpn/server/server.conf
#    owner: root
#    group: root
#    mode: "0644"
#  register: server_conf
#- debug: var=server_conf
#

- name: get openvpn script
  get_url:
    url: https://raw.githubusercontent.com/Nyr/openvpn-install/master/openvpn-install.sh
    dest: ./openvpn-install.sh
    checksum: sha256:55cb078e469b5405cb6d59478ec0ce430a8782076dd4205b194be2bd8b8646da
    mode: "0755"
    backup: yes
  register: openvpn_script
#- debug: var=openvpn_script

- name: patching openvpn-install
  replace:
    path: openvpn-install.sh
    regexp: "{{ item.regex }}"
    replace: "{{ item.replace }}"
    backup: yes
  loop:
    - { regex: '^(\s+)clear', replace: '\g<1>#clear' }
    - { regex: 'verb 3',      replace: 'verb 0'   }
  register: patch
#- debug: var=patch

#- debug: var=ansible_facts
