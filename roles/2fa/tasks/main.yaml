---
# tasks file for 2fa

#- debug: var="{{ item }}"
#  with_items:
#  - ansible_os_family
#  - ansible_distribution
#  - ansible_distribution_major_version
#  - ansible_distribution_release
#  - ansible_distribution_version

# Fedora requires dnf module with exclude feature
# Fedora 32 won't resolve ansible_distribution variables w/ ansible 2.7
#    use pip install 'ansible==2.8.12' --update
- name: Verify Ansible and system requirements
  block:
  - assert:
      that: "ansible_version.full is version_compare('2.8.12', '>=')"
      fail_msg: "You must update Ansible to at least ansible 2.8.12 to use this role."
      success_msg: "ansible V{{ ansible_version.full }} is OK"
  - debug: var=group_vars
#- debug: var=ansible_version.full

# since Google Authenticator's package is named differently
# depending on the distro, it's package is installed here
- include_tasks: "{{ ansible_os_family }}_tasks.yaml"

- name: Install common 2fa packages (this may take a while)
  package: 
    name: "{{ item }}"
    state: present
  loop:
    - "{{ common_packages }}"

- name: mods to /etc/pam.d/sshd
  block:
  - lineinfile:
      path: /etc/pam.d/sshd
      regex: '^@include common-auth'
      line: '#@include common-auth'
  - lineinfile:
      path: /etc/pam.d/sshd
      line: 'auth required pam_google_authenticator.so'
      backup: yes
    register: pam_sshd
#- debug: var=pam_sshd

# w/o notify, reboot will activate google-authenticator
# run google-authenticator from vagrant account
# vagrant halt + up won't be able to login, but
# doesn't work on fedora, almalinux , or centos 8
- name: mods to /etc/ssh/sshd_config
  block:
  - lineinfile:
      path: /etc/ssh/sshd_config
      regex: "{{ item.regex }}"
      line: "{{ item.line }}"
      backup: yes
    loop:
      - { regex: '(.*)ChallengeResponseAuthentication no', line: 'ChallengeResponseAuthentication yes'}
      - { regex: '^#UsePAM no', line: 'UsePAM yes'}
  - lineinfile:
      path: /etc/ssh/sshd_config
      insertafter: 'UsePAM'
      line: 'AuthenticationMethods publickey,password publickey,keyboard-interactive'
      backup: yes
    register: sshd_config
#  notify: "restart sshd service"
#- debug: var=sshd_config

# unfortunately, you can't use expect to answer the google-authenticator questions
# as it prints out a QAR code on the terminal for a phone app to scan
# you must login via ssh and run google-authenticator manually
# then restart sshd

#- name: setup Google Authenticator
#  expect: 
#    command: google-authenticator
#    responses:
#      (?i) file? (y/n): y
#      (?i) attacks (y/n): y
#      (?i) do so? (y/n): y
#      (?i) rate-limiting? (y/n): y
#  become: no

- include_tasks: "{{ ansible_os_family }}_services.yaml"
